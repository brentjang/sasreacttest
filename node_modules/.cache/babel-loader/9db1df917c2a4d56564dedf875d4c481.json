{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brento\\\\Desktop\\\\SASReact\\\\src\\\\Pages\\\\Login.jsx\";\nimport React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"../Components/Input\";\nimport http from \"../APIServices/httpService\";\nimport config from \"../APIServices/config.json\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport UserContext from \"../Context/UserContext\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      account: {\n        email: \"\",\n        password: \"\"\n      },\n      errors: {},\n      userList: {},\n      teams: []\n    };\n    this.schema = {\n      email: Joi.string().required().label(\"email\"),\n      password: Joi.string().required().label(\"password\")\n    };\n\n    this.sleep = milliseconds => {\n      return new Promise(resolve => setTimeout(resolve, milliseconds));\n    };\n\n    this.validate = () => {\n      const options = {\n        abortEarly: false\n      };\n      const {\n        error\n      } = Joi.validate(this.state.account, this.schema, options);\n      if (!error) return null;\n      const errors = {};\n\n      for (let item of error.details) {\n        errors[item.path[0]] = item.message;\n      }\n\n      return errors;\n    };\n\n    this.validateProperty = ({\n      name,\n      value\n    }) => {\n      const obj = {\n        [name]: value\n      };\n      const schema = {\n        [name]: this.schema[name]\n      };\n      const {\n        error\n      } = Joi.validate(obj, schema);\n      return error ? error.details[0].message : null;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const errors = this.validate();\n      this.setState({\n        errors: errors || {}\n      });\n      if (errors) return;\n      this.doSubmit();\n    };\n\n    this.handleChange = ({\n      currentTarget: input\n    }) => {\n      const errors = { ...this.state.errors\n      };\n      const errorMessage = this.validateProperty(input);\n      if (errorMessage) errors[input.name] = errorMessage;else delete errors[input.name];\n      const account = { ...this.state.account\n      };\n      account[input.name] = input.value;\n      this.setState({\n        account,\n        errors\n      });\n    };\n\n    this.doSubmit = async () => {\n      const {\n        userList,\n        account,\n        teams\n      } = this.state;\n      const {\n        history\n      } = this.props;\n\n      for (let x in userList) {\n        if (account.email === userList[x].email && account.password === userList[x].password) {\n          this.context.currentUser.email = userList[x].email;\n          this.context.currentUser.teamID = userList[x].team_id;\n          this.context.currentUser.isManager = userList[x].manager; //tracks user log in\n\n          /*\r\n          http\r\n            .post(config.apiEndpoint + \"/logintracking/\", {\r\n              user_id: userList[x].id,\r\n            })\r\n            .then((res) => {\r\n              console.log(res);\r\n            });\r\n          \r\n          */\n\n          for (let x in teams) {\n            if (this.context.currentUser.teamID === teams[x].team_id) {\n              this.context.currentUser.budget = teams[x].budget;\n              break;\n            }\n          }\n\n          toast.success(`Logged in successfully!`);\n          await this.sleep(2000);\n          history.push(\"/overview\");\n        } else {\n          toast.error(\"Email and Password doesn't match\");\n        }\n      }\n    };\n  }\n\n  async componentDidMount() {\n    http.get(config.apiEndpoint + \"/user/\").then(res => {\n      console.log(res.data);\n      this.setState({\n        userList: res.data\n      });\n    });\n    http.get(config.apiEndpoint + \"/team/\").then(res => {\n      this.setState({\n        teams: res.data\n      });\n      console.log(res);\n    });\n  } //used in do submit to send successfully logged in user to quiz\n\n\n  render() {\n    const {\n      account,\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ToastContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-page \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Login Header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 23\n      }\n    }, \"SAS User Login\")))), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"login-form \",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      className: \"login-input\",\n      name: \"email\",\n      value: account.email,\n      label: \"Email\",\n      onChange: this.handleChange,\n      error: errors.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      className: \"login-input\",\n      name: \"password\",\n      value: account.password,\n      label: \"Password\",\n      onChange: this.handleChange,\n      error: errors.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      disabled: this.validate(),\n      className: \"btn btn-primary login-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 19\n      }\n    }, \"Login\")))))));\n  }\n\n}\n\nLogin.contextType = UserContext;\nexport default Login;","map":{"version":3,"sources":["C:/Users/Brento/Desktop/SASReact/src/Pages/Login.jsx"],"names":["React","Component","Joi","Input","http","config","ToastContainer","toast","UserContext","Login","state","account","email","password","errors","userList","teams","schema","string","required","label","sleep","milliseconds","Promise","resolve","setTimeout","validate","options","abortEarly","error","item","details","path","message","validateProperty","name","value","obj","handleSubmit","e","preventDefault","setState","doSubmit","handleChange","currentTarget","input","errorMessage","history","props","x","context","currentUser","teamID","team_id","isManager","manager","budget","success","push","componentDidMount","get","apiEndpoint","then","res","console","log","data","render","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"../Components/Input\";\r\nimport http from \"../APIServices/httpService\";\r\nimport config from \"../APIServices/config.json\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport UserContext from \"../Context/UserContext\";\r\n\r\nclass Login extends Component {\r\n  static contextType = UserContext;\r\n\r\n  state = {\r\n    account: { email: \"\", password: \"\" },\r\n    errors: {},\r\n    userList: {},\r\n    teams: [],\r\n  };\r\n\r\n  schema = {\r\n    email: Joi.string().required().label(\"email\"),\r\n    password: Joi.string().required().label(\"password\"),\r\n  };\r\n\r\n  async componentDidMount() {\r\n    http.get(config.apiEndpoint + \"/user/\").then((res) => {\r\n      console.log(res.data);\r\n      this.setState({ userList: res.data });\r\n    });\r\n\r\n    http.get(config.apiEndpoint + \"/team/\").then((res) => {\r\n      this.setState({ teams: res.data });\r\n      console.log(res);\r\n    });\r\n  }\r\n\r\n  //used in do submit to send successfully logged in user to quiz\r\n  sleep = (milliseconds) => {\r\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.account, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) {\r\n      errors[item.path[0]] = item.message;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n    const account = { ...this.state.account };\r\n    account[input.name] = input.value;\r\n    this.setState({ account, errors });\r\n  };\r\n  /* token do submit \r\n  doSubmit = async () => {\r\n    try {\r\n      const { account } = this.state;\r\n      const { data } = await login(account.username, account.password);\r\n      localStorage.setItem(\"token\", data.token);\r\n      //this.props.history.push(\"/quiz\");\r\n      window.location = \"/quiz\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.account;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  }; */\r\n\r\n  // do submit from bas\r\n  doSubmit = async () => {\r\n    const { userList, account, teams } = this.state;\r\n    const { history } = this.props;\r\n\r\n    for (let x in userList) {\r\n      if (\r\n        account.email === userList[x].email &&\r\n        account.password === userList[x].password\r\n      ) {\r\n        this.context.currentUser.email = userList[x].email;\r\n        this.context.currentUser.teamID = userList[x].team_id;\r\n        this.context.currentUser.isManager = userList[x].manager;\r\n\r\n        //tracks user log in\r\n        /*\r\n        http\r\n          .post(config.apiEndpoint + \"/logintracking/\", {\r\n            user_id: userList[x].id,\r\n          })\r\n          .then((res) => {\r\n            console.log(res);\r\n          });\r\n        \r\n*/\r\n\r\n        for (let x in teams) {\r\n          if (this.context.currentUser.teamID === teams[x].team_id) {\r\n            this.context.currentUser.budget = teams[x].budget;\r\n            break;\r\n          }\r\n        }\r\n        toast.success(`Logged in successfully!`);\r\n\r\n        await this.sleep(2000);\r\n\r\n        history.push(\"/overview\");\r\n      } else {\r\n        toast.error(\"Email and Password doesn't match\");\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { account, errors } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <ToastContainer />\r\n\r\n        <div className=\"login-body\">\r\n          <div className=\"login-page \">\r\n            <div className=\"login-css\">\r\n              <div className=\"login-form\">\r\n                <div className=\"login\">\r\n                  <div className=\"Login Header\">\r\n                    <h1>\r\n                      <b>SAS User Login</b>\r\n                    </h1>\r\n                  </div>\r\n                </div>\r\n                <form className=\"login-form \" onSubmit={this.handleSubmit}>\r\n                  <Input\r\n                    className=\"login-input\"\r\n                    name=\"email\"\r\n                    value={account.email}\r\n                    label=\"Email\"\r\n                    onChange={this.handleChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <Input\r\n                    className=\"login-input\"\r\n                    name=\"password\"\r\n                    value={account.password}\r\n                    label=\"Password\"\r\n                    onChange={this.handleChange}\r\n                    error={errors.password}\r\n                  />\r\n                  <button\r\n                    disabled={this.validate()}\r\n                    className=\"btn btn-primary login-button\"\r\n                  >\r\n                    Login\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}